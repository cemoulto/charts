apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicasCount }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        resources:
          limits:
            cpu: {{ .Values.cpu }}
            memory: {{ .Values.memory }}
          requests:
            cpu: 200m
            memory: 100Mi
        ports:
        - name: http
          containerPort: 1080
          protocol: TCP
        env:
        - name: PORT
          value: "1080"
        - name: NODE_ENV
          value: "{{ .Values.nodeEnv }}"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: redis-url
        - name: PROXY_UPDATE_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: proxy-url
        - name: PROXY_UPDATE_SCHEDULE
          value: "{{ .Values.schedule }}"
{{- if and ($key := .Values.nodeSelector) ($value := .Values.nodeSelector) }}
      nodeSelector:
        {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: {{ $value }}
        {{- end }}
{{- end }}
